{"ast":null,"code":"var _jsxFileName = \"/home/innovationlab/Desktop/Final_Website/frontend_final/src/components/VideoFrameCapture.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useAuth, authFetch } from '../auth'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFrameCapture = () => {\n  _s();\n  const videoRef = useRef(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [selectedFrameBefore, setSelectedFrameBefore] = useState(null);\n  const [selectedFrameAfter, setSelectedFrameAfter] = useState(null);\n  const [selectedImageFile, setSelectedImageFile] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [predictedImage, setPredictedImage] = useState(null);\n  const {\n    authState\n  } = useAuth();\n\n  // Check if authState is defined before accessing accessToken\n  const token = localStorage.getItem('access_token');\n  const handleImageUpload = event => {\n    const file = event.target.files[0]; // Get the selected file from the event\n\n    if (file) {\n      setSelectedImageFile(file);\n      setSelectedImage(URL.createObjectURL(file));\n    }\n  };\n  /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    src: \"path_to_your_video_backend\",\n    controls: true,\n    onTimeUpdate: () => setCurrentTime(videoRef.current.currentTime)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 1\n  }, this);\n  const response = authFetch('/upload/predict', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const handleEnhanceClick = async () => {\n    try {\n      const response = await authFetch('/upload/predict', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPredictedImage(data.predicted_image);\n      } else {\n        console.error('Error retrieving predicted image:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error communicating with the server', error);\n    }\n  };\n  const handleSubmitClick = async () => {\n    if (selectedImageFile && selectedFrameBefore && selectedFrameAfter) {\n      try {\n        const formData = new FormData();\n        formData.append('image', selectedImageFile);\n        formData.append('frameBefore', selectedFrameBefore);\n        formData.append('frameAfter', selectedFrameAfter);\n        const response = await authFetch('/upload/submit', {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: formData\n        });\n        if (response.ok) {\n          setPredictedImage(null); // Clear predicted image\n          setSelectedImage(null); // Clear selected image\n          setSelectedFrameBefore(null); // Clear captured frames\n          setSelectedFrameAfter(null);\n        } else {\n          console.error('Error uploading image:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error communicating with the server', error);\n      }\n    } else {\n      console.log('Please select an image and capture frames before submitting.');\n    }\n  };\n  const handlePlayPause = () => {\n    const video = videoRef.current;\n    if (video.paused) {\n      video.play();\n    } else {\n      video.pause();\n    }\n  };\n  const handleCaptureFrame = () => {\n    const video = videoRef.current;\n\n    // Ensure the video has loaded metadata\n    if (!video.duration) {\n      return;\n    }\n\n    // Capture frames 5 seconds before and after the current time\n    const captureTimeBefore = Math.max(0, currentTime - 5);\n    const captureTimeAfter = Math.min(video.duration, currentTime + 5);\n    video.currentTime = captureTimeBefore;\n\n    // Wait for the video to seek\n    // Wait for the video to seek\n    video.onseeked = () => {\n      const canvasBefore = document.createElement('canvas');\n      canvasBefore.width = video.videoWidth;\n      canvasBefore.height = video.videoHeight;\n      const ctxBefore = canvasBefore.getContext('2d');\n      ctxBefore.drawImage(video, 0, 0, canvasBefore.width, canvasBefore.height);\n      const frameDataURLBefore = canvasBefore.toDataURL('image/png/jpg');\n      setSelectedFrameBefore(frameDataURLBefore);\n\n      // Now capture frame after 5 seconds\n      video.currentTime = captureTimeAfter;\n\n      // Wait for the video to seek again\n      video.onseeked = () => {\n        const canvasAfter = document.createElement('canvas');\n        canvasAfter.width = video.videoWidth;\n        canvasAfter.height = video.videoHeight;\n        const ctxAfter = canvasAfter.getContext('2d');\n        ctxAfter.drawImage(video, 0, 0, canvasAfter.width, canvasAfter.height);\n        const frameDataURLAfter = canvasAfter.toDataURL('image/png/jpg');\n        setSelectedFrameAfter(frameDataURLAfter);\n      };\n    };\n  };\n  const styles = {\n    uploadContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      backgroundImage: 'linear-gradient(to right, #000000 5%, #3533cd)',\n      backgroundSize: 'cover'\n    },\n    uploadBox: {\n      backgroundColor: 'white',\n      border: '2px solid #ccc',\n      padding: '20px',\n      borderRadius: '10px',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',\n      textAlign: 'center'\n    },\n    imageBox: {\n      position: 'relative',\n      marginBottom: '10px'\n    },\n    uploadedImage: {\n      maxWidth: '100%',\n      maxHeight: '300px'\n    },\n    uploadMessage: {\n      fontSize: '18px',\n      color: '#555',\n      marginBottom: '10px'\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '10px'\n    },\n    uploadButton: {\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '10px 20px',\n      border: 'none',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      fontSize: '16px',\n      marginRight: '10px'\n    },\n    enhanceButton: {\n      backgroundColor: '#28a745'\n    },\n    captureButton: {\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '10px 20px',\n      border: 'none',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      fontSize: '16px',\n      marginRight: '10px'\n    },\n    /* Styles for the frame container */\n    frameContainer: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: '20px'\n    },\n    /* Styles for captured frames */\n    capturedFrame: {\n      width: '48%',\n      maxHeight: '200px',\n      border: '1px solid #ccc',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.uploadContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.uploadBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.imageBox,\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          src: \"path_to_your_video_backend\",\n          controls: true,\n          onTimeUpdate: () => setCurrentTime(videoRef.current.currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }, this), selectedImage || predictedImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: predictedImage || selectedImage,\n          alt: \"Uploaded\",\n          style: styles.uploadedImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.uploadMessage,\n          children: \"Upload an image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), selectedImageFile ? null : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.uploadButton,\n          onClick: handleSubmitClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), predictedImage && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.enhanceButton,\n          onClick: handleEnhanceClick,\n          children: \"Enhance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.captureButton,\n          onClick: handleCaptureFrame,\n          children: \"Capture Frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), selectedFrameBefore && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.frameContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedFrameBefore,\n          alt: \"Captured Before\",\n          style: styles.capturedFrame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedFrameAfter,\n          alt: \"Captured After\",\n          style: styles.capturedFrame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFrameCapture, \"GTajkbQNSMij+T7iFIqM4S+GsSw=\", false, function () {\n  return [useAuth];\n});\n_c = VideoFrameCapture;\nexport default VideoFrameCapture;\nvar _c;\n$RefreshReg$(_c, \"VideoFrameCapture\");","map":{"version":3,"names":["React","useState","useRef","useAuth","authFetch","jsxDEV","_jsxDEV","VideoFrameCapture","_s","videoRef","currentTime","setCurrentTime","selectedFrameBefore","setSelectedFrameBefore","selectedFrameAfter","setSelectedFrameAfter","selectedImageFile","setSelectedImageFile","selectedImage","setSelectedImage","predictedImage","setPredictedImage","authState","token","localStorage","getItem","handleImageUpload","event","file","target","files","URL","createObjectURL","ref","src","controls","onTimeUpdate","current","fileName","_jsxFileName","lineNumber","columnNumber","response","method","headers","Authorization","handleEnhanceClick","ok","data","json","predicted_image","console","error","statusText","handleSubmitClick","formData","FormData","append","body","log","handlePlayPause","video","paused","play","pause","handleCaptureFrame","duration","captureTimeBefore","Math","max","captureTimeAfter","min","onseeked","canvasBefore","document","createElement","width","videoWidth","height","videoHeight","ctxBefore","getContext","drawImage","frameDataURLBefore","toDataURL","canvasAfter","ctxAfter","frameDataURLAfter","styles","uploadContainer","display","justifyContent","alignItems","backgroundImage","backgroundSize","uploadBox","backgroundColor","border","padding","borderRadius","boxShadow","textAlign","imageBox","position","marginBottom","uploadedImage","maxWidth","maxHeight","uploadMessage","fontSize","color","buttons","marginTop","uploadButton","cursor","marginRight","enhanceButton","captureButton","frameContainer","capturedFrame","style","children","alt","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/innovationlab/Desktop/Final_Website/frontend_final/src/components/VideoFrameCapture.js"],"sourcesContent":["import React, { useState , useRef} from 'react';\nimport { useAuth, authFetch } from '../auth'; // Adjust the path as needed\n\nconst VideoFrameCapture = () => {\n   \n  const videoRef = useRef(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [selectedFrameBefore, setSelectedFrameBefore] = useState(null);\n  const [selectedFrameAfter, setSelectedFrameAfter] = useState(null);\n  const [selectedImageFile, setSelectedImageFile] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [predictedImage, setPredictedImage] = useState(null);\n  const { authState } = useAuth();\n\n// Check if authState is defined before accessing accessToken\nconst token = localStorage.getItem('access_token');\n\nconst handleImageUpload = (event) => {\n\nconst file = event.target.files[0]; // Get the selected file from the event\n\n  if (file) {\n    setSelectedImageFile(file);\n    setSelectedImage(URL.createObjectURL(file));\n  }\n};\n\n<video\nref={videoRef}\nsrc=\"path_to_your_video_backend\"\ncontrols\nonTimeUpdate={() => setCurrentTime(videoRef.current.currentTime)}\n/>\nconst response =  authFetch('/upload/predict', {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n});\n\nconst handleEnhanceClick = async () => {\n    try {\n      const response = await authFetch('/upload/predict', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      });\n\n\n      if (response.ok) {\n        const data = await response.json();\n        setPredictedImage(data.predicted_image);\n      } else {\n        console.error('Error retrieving predicted image:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error communicating with the server', error);\n    }\n  };\n\n  const handleSubmitClick = async () => {\n    if (selectedImageFile && selectedFrameBefore && selectedFrameAfter) {\n      try {\n        const formData = new FormData();\n        formData.append('image', selectedImageFile);\n        formData.append('frameBefore', selectedFrameBefore);\n        formData.append('frameAfter', selectedFrameAfter);\n  \n        const response = await authFetch('/upload/submit', {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: formData,\n        });\n  \n        if (response.ok) {\n          setPredictedImage(null); // Clear predicted image\n          setSelectedImage(null); // Clear selected image\n          setSelectedFrameBefore(null); // Clear captured frames\n          setSelectedFrameAfter(null);\n        } else {\n          console.error('Error uploading image:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error communicating with the server', error);\n      }\n    } else {\n      console.log('Please select an image and capture frames before submitting.');\n    }\n  };\n  \n  \n    const handlePlayPause = () => {\n      const video = videoRef.current;\n  \n      if (video.paused) {\n        video.play();\n      } else {\n        video.pause();\n      }\n    };\n\n    \n\n\n    const handleCaptureFrame = () => {\n        const video = videoRef.current;\n    \n        // Ensure the video has loaded metadata\n        if (!video.duration) {\n          return;\n        }\n\n        // Capture frames 5 seconds before and after the current time\n    const captureTimeBefore = Math.max(0, currentTime - 5);\n\n    const captureTimeAfter = Math.min(video.duration, currentTime + 5);\n\n    video.currentTime  = captureTimeBefore;\n\n\n    // Wait for the video to seek\n  // Wait for the video to seek\n  video.onseeked = () => {\n    const canvasBefore = document.createElement('canvas');\n    canvasBefore.width = video.videoWidth;\n    canvasBefore.height = video.videoHeight;\n    const ctxBefore = canvasBefore.getContext('2d');\n    ctxBefore.drawImage(video, 0, 0, canvasBefore.width, canvasBefore.height);\n    const frameDataURLBefore = canvasBefore.toDataURL('image/png/jpg');\n    setSelectedFrameBefore(frameDataURLBefore);\n\n    // Now capture frame after 5 seconds\n    video.currentTime = captureTimeAfter;\n\n    // Wait for the video to seek again\n      video.onseeked = () => {\n        const canvasAfter = document.createElement('canvas');\n        canvasAfter.width = video.videoWidth;\n        canvasAfter.height = video.videoHeight;\n        const ctxAfter = canvasAfter.getContext('2d');\n        ctxAfter.drawImage(video, 0, 0, canvasAfter.width, canvasAfter.height);\n        const frameDataURLAfter = canvasAfter.toDataURL('image/png/jpg');\n        setSelectedFrameAfter(frameDataURLAfter);\n      };\n    };\n    };    \n\n\n\n  const styles = {\n    uploadContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      backgroundImage: 'linear-gradient(to right, #000000 5%, #3533cd)',\n      backgroundSize: 'cover',\n    },\n    uploadBox: {\n      backgroundColor: 'white',\n      border: '2px solid #ccc',\n      padding: '20px',\n      borderRadius: '10px',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',\n      textAlign: 'center',\n    },\n    imageBox: {\n      position: 'relative',\n      marginBottom: '10px',\n    },\n    uploadedImage: {\n      maxWidth: '100%',\n      maxHeight: '300px',\n    },\n    uploadMessage: {\n      fontSize: '18px',\n      color: '#555',\n      marginBottom: '10px',\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '10px',\n    },\n    uploadButton: {\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '10px 20px',\n      border: 'none',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      fontSize: '16px',\n      marginRight: '10px',\n    },\n    enhanceButton: {\n      backgroundColor: '#28a745',\n    },\n    captureButton: {\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '10px 20px',\n      border: 'none',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      fontSize: '16px',\n      marginRight: '10px',\n    },\n\n/* Styles for the frame container */\nframeContainer : {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: '20px',\n},\n\n\n/* Styles for captured frames */\ncapturedFrame:{\n  width: '48%',\n  maxHeight: '200px',\n  border: '1px solid #ccc',\n  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n}\n  };\n\n  return (\n    <div style={styles.uploadContainer}>\n      <div style={styles.uploadBox}>\n        <div style={styles.imageBox}>\n        <video\n            ref={videoRef}\n            src=\"path_to_your_video_backend\"\n            controls\n            onTimeUpdate={() => setCurrentTime(videoRef.current.currentTime)}\n          />\n          {selectedImage || predictedImage ? (\n            <img\n              src={predictedImage || selectedImage}\n              alt=\"Uploaded\"\n              style={styles.uploadedImage}\n            />\n          ) : (\n            <div style={styles.uploadMessage}>Upload an image</div>\n          )}\n          {selectedImageFile ? null : (\n            <input\n              type=\"file\"\n              onChange={handleImageUpload}\n            />\n          )}\n        </div>\n        <div style={styles.buttons}>\n          <button style={styles.uploadButton} onClick={handleSubmitClick}>\n            Submit\n          </button>\n          {predictedImage && (\n            <button style={styles.enhanceButton} onClick={handleEnhanceClick}>\n              Enhance\n            </button>\n\n          )}\n          <button style={styles.captureButton} onClick={handleCaptureFrame}>\n            Capture Frame\n          </button>\n          </div>\n        {selectedFrameBefore && (\n          <div style={styles.frameContainer}>\n            <img\n              src={selectedFrameBefore}\n              alt=\"Captured Before\"\n              style={styles.capturedFrame}\n            />\n            <img\n              src={selectedFrameAfter}\n              alt=\"Captured After\"\n              style={styles.capturedFrame}\n            />\n          </div>\n        )}\n        </div>\n\n      </div>\n    \n  );\n};\nexport default VideoFrameCapture;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}